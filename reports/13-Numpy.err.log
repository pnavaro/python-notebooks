Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 154, in wrapped
    asyncio.get_running_loop()
    ~~~~~~~~~~~~~~~~~~~~~~~~^^
RuntimeError: no running event loop

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/jupyter_cache/executors/utils.py", line 58, in single_nb_execution
    executenb(
    ~~~~~~~~~^
        nb,
        ^^^
    ...<4 lines>...
        **kwargs,
        ^^^^^^^^^
    )
    ^
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/nbclient/client.py", line 1319, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
           ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/jupyter_core/utils/__init__.py", line 158, in wrapped
    return loop.run_until_complete(inner)
           ~~~~~~~~~~~~~~~~~~~~~~~^^^^^^^
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/asyncio/base_events.py", line 725, in run_until_complete
    return future.result()
           ~~~~~~~~~~~~~^^
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/nbclient/client.py", line 709, in async_execute
    await self.async_execute_cell(
        cell, index, execution_count=self.code_cells_executed + 1
    )
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/nbclient/client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/nbclient/client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
np.asfarray([1,2,3,4]) # Return an array converted to a float type
------------------


[31m---------------------------------------------------------------------------[39m
[31mAttributeError[39m                            Traceback (most recent call last)
[36mCell[39m[36m [39m[32mIn[25][39m[32m, line 1[39m
[32m----> [39m[32m1[39m [43mnp[49m[43m.[49m[43masfarray[49m([[32m1[39m,[32m2[39m,[32m3[39m,[32m4[39m]) [38;5;66;03m# Return an array converted to a float type[39;00m

[36mFile [39m[32m/usr/share/miniconda3/envs/runenv/lib/python3.13/site-packages/numpy/__init__.py:400[39m, in [36m__getattr__[39m[34m(attr)[39m
[32m    397[39m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(__former_attrs__[attr], name=[38;5;28;01mNone[39;00m)
[32m    399[39m [38;5;28;01mif[39;00m attr [38;5;129;01min[39;00m __expired_attributes__:
[32m--> [39m[32m400[39m     [38;5;28;01mraise[39;00m [38;5;167;01mAttributeError[39;00m(
[32m    401[39m         [33mf[39m[33m"[39m[33m`np.[39m[38;5;132;01m{[39;00mattr[38;5;132;01m}[39;00m[33m` was removed in the NumPy 2.0 release. [39m[33m"[39m
[32m    402[39m         [33mf[39m[33m"[39m[38;5;132;01m{[39;00m__expired_attributes__[attr][38;5;132;01m}[39;00m[33m"[39m,
[32m    403[39m         name=[38;5;28;01mNone[39;00m
[32m    404[39m     )
[32m    406[39m [38;5;28;01mif[39;00m attr == [33m"[39m[33mchararray[39m[33m"[39m:
[32m    407[39m     warnings.warn(
[32m    408[39m         [33m"[39m[33m`np.chararray` is deprecated and will be removed from [39m[33m"[39m
[32m    409[39m         [33m"[39m[33mthe main namespace in the future. Use an array with a string [39m[33m"[39m
[32m    410[39m         [33m"[39m[33mor bytes dtype instead.[39m[33m"[39m, [38;5;167;01mDeprecationWarning[39;00m, stacklevel=[32m2[39m)

[31mAttributeError[39m: `np.asfarray` was removed in the NumPy 2.0 release. Use `np.asarray` with a proper dtype instead.

